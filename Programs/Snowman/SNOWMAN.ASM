; CALCULATOR NOVEMBER 19 2024
; FOUR FUNCTION CALCULATOR IN 8080 ASSEMBLY LANGUAGE
; CREATOR: AKSHAY KUCHIBHATLA

; SET UP ASCII CHARS
CR      EQU     0DH
LF      EQU     0AH
CTRLZ   EQU     1AH

; CP/M BDOS FUNCTIONS
RCONF   EQU     1   ; READ CON: INTO (A)
WCONF   EQU     2   ; WRITE (A) TO CON:
RBUFF   EQU     10  ; READ CON: LINE FUNCTION

; CP/M ADDRESSES
RBOOT   EQU     0    ; REBOOT CP/M
BDOS    EQU     5    ; SYSTEM CALL ENTRY
TPA     EQU     100H ; DEFINE TPA
		ORG		TPA	 ; TELLS CP/M TO START AT TPA ADDRESS

START:	LXI     SP,STAK ; SET UP USER STACK
START1:	CALL    CCRLF   ; START A NEW LINE
		MVI		A,05H	 ; IMPORTANT FOR NEXT FUNCTION. 
		CALL	PMAN	 ; PRINT MAN

PMAN:	PUSH	B	; SAVE REGISTERS
		PUSH	D
		PUSH	H
		CALL	SPMSG
		LINE1
		CALL	SPMSG
		LINE2
FINISH: PUSH	H
		PUSH	D
		PUSH	B

; LINES OF THE SNOWMAN ASCII
LINE1:  DB      '   _|==|_ ',CR,LF,0
LINE2:  DB      '    (••)___/', CR,LF,0
LINE3:  DB      '>--(`^^^)',CR,LF,0
LINE4:  DB      '  (`^^^^`)',CR,LF,0
LINE5:  DB      '  `======´',CR,LF,0

; OUTPUT CHAR IN (A) TO CON:
CO:		PUSH	B	; SAVE REGISTERS
		PUSH	D
		PUSH	H
		MVI		C,WCONF ; MOVE PRINT CHAR TO (C)
		MOV		E,A		; MOV CHAR FROM (A) TO (E)
		CALL	BDOS	; RUN IT
		ANI		7FH		; MASK TO 7 BITS
		POP		H		; RESTORE REGISTERS
		POP		D
		POP		B
		RET

TWOCR:  CALL    CCRLF ; PRINTS TWO CARRIAGE RETURNS

; OUTPUT CARRIAGE RETURN TO CON:
CCRLF:	MVI		A,CR	; PUT CARRIAGE RETURN CHAR IN (A)
		CALL	CO		; PRINT IT TO CON:
		MVI		A,LF	; DO THE SAME WITH LINE FEED
		JMP		CO

SPMSG:  XTHL               ; Get "RETURN ADDRESS" to HL
        XRA     A          ; Clear flags and accumulator
        ADD     M          ; Get one message character
        INX     H          ; Point to the next character
        XTHL               ; Restore stack for return
        RZ                 ; Return if done (zero)
        CALL    CO         ; Else display character
        JMP     SPMSG      ; And do another

; PRINT MESSAGE TO CON:
COMSG:	MOV		A,M		; MOV CHARACTER INTO (A)
		ORA		A		; LOGICAL OR WITH (A)
		RZ				; RET IF CHAR = 0 (NULL TERMINATED)
		CALL	CO		; PRINT CHAR TO CON:
		INX		H		; MOVE ON TO NEXT CHAR IN MSG
		JMP		COMSG	; REPEAT

; RECIEVE MESSAGE FROM CON:
CIMSG:	PUSH	B	; SAVE REGISTERS
		PUSH	D
		PUSH	H
		LXI		H,INBUF+1 ; POINT TO 2ND SLOT IN BUFFER
		MVI		M,0	; MAKE THIS SLOT = 0
		DCX		H	; DECREMENT BACK TO 1ST SLOT
		MVI		M,80; LOAD MAX CHAR COUNT
		XCHG		; SEND INBUFF POINTER TO DE
		MVI		C,RBUFF; SET UP READ BUFFER
		CALL	BDOS   ; 

INBUF:  DS      83      ; LINE INPUT BUFFER
        CALL    CCRLF   ; ADD CR, LF
        JMP     START2  ; KEEP GOING

; SET UP STACK SPACE AT THE END OF PROGRAM
        DS      64      ; 40H LOCATIONS (64 IN DEC)
STAK:   DB      0       ; TOP OF STACK

        END
